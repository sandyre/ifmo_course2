<project xmlns:ivy="antlib:org.apache.ivy.ant" name="PIP_L3" default="full">
	<property file="build.prop"/>
	<path id="application" location="${jar.dir}/${ant.project.name}.jar"/>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <path id="ivy.lib.path">
        <fileset dir="." includes="ivy-2.4.0.jar"/>
    </path>
    
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
        uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    
    <target name="init">
            <ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact].[ext]"/>
    </target>

	<target name="full" depends="init">
		<antcall target="svnupdate"/>
		<antcall target="clean"/>
		<antcall target="build"/>
		<antcall target="test"/>
		<antcall target="doc"/>
	</target>

	<target name="svnupdate">
		<exec executable="svn">
			<arg value="update"/>
			<arg value="src"/>
		</exec>
	</target>

	<macrodef name="property-exp">
    	<attribute name="name" />
    	<attribute name="value" />
    	<sequential>
        	<script language="javascript">
            	project.setProperty("@{name}", eval(@{value}));
        	</script>
    	</sequential>
	</macrodef>

	<target name="compile" depends="init">
		<delete dir="${build.dir}" failonerror="false"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${class.dir}"/>
		<mkdir dir="${class.dir}/junit"/>
		<trycatch>
			<try>
				<javac srcdir="${src.dir}" destdir="${class.dir}"/>
			</try>

			<catch>
				<exec executable="svnversion" outputproperty="unstable_rev.number">
					<arg value="${src.dir}"/>
				</exec>
				<property-exp name="unstable_rev.number" value="${unstable_rev.number} - 1"/>
				<antcall target="history"/>
			</catch>
		</trycatch>
		<if>
			<equals arg1="${diff.needed}" arg2="true"/>
				<then>
					<exec executable="svnversion" outputproperty="stable_rev.number">
						<arg value="${src.dir}"/>
					</exec>
					<antcall target="diff"/>
				</then>
		</if>
	</target>

	<target name="history">
		<property name="diff.needed" value="true"/>
		<exec executable="svn">
			<arg line="update src -r ${unstable_rev.number}"/>
		</exec>
		<antcall target="compile"/>
	</target>

	<target name="diff">
		<property-exp name="unstable_rev.number" value="${unstable_rev.number} + 1"/>
		<exec executable="svn" output="${diff.file}_r${stable_rev.number}_to_r${unstable_rev.number}.txt">
			<arg line="diff src -r ${stable_rev.number}:${unstable_rev.number}"/>
		</exec>
	</target>

	<target name="clean">
		<delete dir="${build.dir}" failonerror="false"/>
		<delete>
			<fileset dir="." includes="*diff*"/>
		</delete>
	</target>

	<target name="build" depends="init,compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${class.dir}">
			<manifest>
					<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
		</jar>
	</target>

	<target name="test" depends="build">
		<mkdir dir="${class.dir}/tests"/>
		<javac srcdir="${junit.dir}" destdir="${class.dir}/tests">
			<classpath>
                <fileset dir="lib/test" includes="*.jar"/>
				<pathelement location="${class.dir}"/>
			</classpath>
		</javac>
		<junit printsummary="yes" showoutput="yes" filtertrace="false">
			<classpath>
				<fileset dir="lib/test" includes="*.jar"/>
				<pathelement location="${class.dir}"/>
				<pathelement location="${class.dir}/tests"/>
			</classpath>
			<batchtest fork="yes">
				<fileset dir="lib/test" includes="*.jar"/>
                <fileset dir="${junit.dir}" includes="*.java"/>
			</batchtest>
		</junit>
	</target>

	<target name="doc" depends="build">
		<delete dir="${doc.dir}" failonerror="false"/>
		<mkdir dir="${doc.dir}"/>
		<signjar jar="${jar.dir}/${ant.project.name}.jar"
			alias="sandyre" keystore=".keystore" keypass="qwerty"
			storepass="qwerty"
			sigalg="MD5withRSA"
			digestalg="MD5">
			<path>
				<fileset dir="${jar.dir}" includes="*.jar"/>
			</path>
		</signjar>
		<signjar jar="${jar.dir}/${ant.project.name}.jar"
			alias="sandyre" keystore=".keystore" keypass="qwerty"
			storepass="qwerty"
			sigalg="MD5withRSA"
			digestalg="SHA1">
			<path>
				<fileset dir="${jar.dir}" includes="*.jar"/>
			</path>
		</signjar>
		<javadoc destdir="${doc.dir}">
			<fileset dir="${src.dir}"/>
		</javadoc>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" update="yes">
			<fileset dir=".">
				<include name="**/${doc.dir}/**"/>
			</fileset>
		</jar>
	</target>
</project>